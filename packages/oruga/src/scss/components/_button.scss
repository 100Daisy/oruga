
/* @docs */
$button-background-color: #ffffff !default;
$button-border-radius: $base-border-radius !default;
$button-border: 1px solid #000000 !default;
$button-box-shadow: none !default;
$button-color: #000000 !default;
$button-font-size: $base-font-size !default;
$button-font-weight: 400 !default;
$button-line-height: $base-line-height !default;
$button-margin-border-to-icon: calc(-0.375em - #{$control-border-width}) !default;
$button-margin-icon-to-text: .1875em !default;
$button-icon-width: 1.5em !default;
$button-margin: 0 !default;
$button-height: $control-height !default;
$button-padding: $control-padding-vertical .75em !default;
$button-rounded-border-radius: $base-rounded-border-radius !default;
$button-disabled-opacity: $base-disabled-opacity !default;
/* @docs */

.o-btn {
    -moz-appearance: none;
    -webkit-appearance: none;
    display: inline-flex;
    position: relative;
    cursor: pointer;
    text-align: center;
    white-space: nowrap;
    align-items: center;
    justify-content: center;
    vertical-align: top;
    text-decoration: none;
    outline: none;
    @include unselectable;
    @include avariable('background-color', 'button-background-color', $button-background-color);
    @include avariable('color', 'button-color', $button-color);
    @include avariable('padding', 'button-padding', $button-padding);
    @include avariable('border', 'button-border', $button-border);
    @include avariable('border-radius', 'button-border-radius', $button-border-radius);
    @include avariable('box-shadow', 'button-box-shadow', $button-box-shadow);
    @include avariable('font-size', 'button-font-size', $button-font-size);
    @include avariable('font-weight', 'button-font-weight', $button-font-weight);
    @include avariable('line-height', 'button-line-height', $button-line-height);
    @include avariable('margin', 'button-margin', $button-margin);
    @include avariable('height', 'button-height', $button-height);
    &:hover {
        text-decoration: none;
    }
    &--expanded {
        width: 100%;
    }
    &--rounded {
        @include avariable('border-radius', 'button-border-radius', $button-rounded-border-radius);
    }
    &--disabled {
        @include avariable('opacity', 'button-disabled-opacity', $button-disabled-opacity);
        cursor: not-allowed;
    }
    &__icon {
        @include avariable('height', 'button-icon-width', $button-icon-width);
        @include avariable('width', 'button-icon-width', $button-icon-width);
        &:first-child:not(:last-child) {
            @include avariable('margin-left', 'button-margin-border-to-icon', $button-margin-border-to-icon);
            @include avariable('margin-right', 'button-margin-icon-to-text', $button-margin-icon-to-text);
        }
        &:last-child:not(:first-child) {
            @include avariable('margin-right', 'button-margin-border-to-icon', $button-margin-border-to-icon);
            @include avariable('margin-left', 'button-margin-icon-to-text', $button-margin-icon-to-text);
        }
    }
    @each $name, $value in $sizes {
        &-size--#{$name} {
            @include avariable('font-size', ('button-font-size-' + #{$name}), $value);
        }
    }
    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &-variant--#{$name} {
            border-color: transparent;
            @include avariable('background-color', ('variant-' + #{$name}), $color);
            @include avariable('color', ('variant-invert-' + #{$name}), $color-invert);
            &:hover {
                // background-color: darken($color, 2.5%)
                // IE 11 needs polyfill
                filter: brightness(97.5%);
            }
        }
    }
    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &--outlined-#{$name} {
            background-color: transparent;
            @include avariable('border-color', ('variant-' + #{$name}), $color);
            @include avariable('color', ('variant-' + #{$name}), $color);
            &:hover {
                border-color: transparent;
                @include avariable('background-color', ('variant-' + #{$name}), $color);
                @include avariable('color', ('variant-invert-' + #{$name}), $color-invert);
            }
        }
    }
    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);
        &--inverted-#{$name} {
            @include avariable('background-color', ('variant-invert-' + #{$name}), $color-invert);
            @include avariable('border-color', ('variant-invert-' + #{$name}), $color-invert);
            @include avariable('color', ('variant-' + #{$name}), $color);
            &:hover {
                // background-color: darken($color-invert, 5%)
                // IE 11 needs polyfill
                filter: brightness(95%);
            }
        }
    }
}
