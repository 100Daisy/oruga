.o-switch {
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    position: relative;
    @include unselectable;
    @include variable('margin-right', 'switch-margin-sibling', $switch-margin-sibling);
    & + .o-switch:last-child {
        margin-right: 0;
    }
    input[type=checkbox] {
        position: absolute;
        left: 0;
        opacity: 0;
        outline: none;
        z-index: -1;
        + .o-switch-check {
            display: flex;
            align-items: center;
            flex-shrink: 0;
            @include variable('width', 'switch-width', $switch-width);
            height: #{$switch-width / 2 + $switch-padding};
            @include variable('padding', 'switch-padding', $switch-padding);
            @include variable('background', 'switch-background', $switch-background);
            @include variable('border-radius', 'switch-border-radius', $switch-border-radius);
            transition: background $speed-slow $easing, box-shadow $speed-slow $easing;
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.color-#{$name}-passive, &:hover {
                    @include variable('background', ('color-' + #{$name}), $color);
                }
            }    
            &:before {
                content: "";
                display: block;
                @include variable('border-radius', 'switch-border-radius', $switch-border-radius);
                width: #{($switch-width - $switch-padding * 2) / 2};
                height: #{($switch-width - $switch-padding * 2) / 2};
                @include variable('background', 'switch-background', $switch-background);
                @include variable('box-shadow', 'switch-box-shadow', $switch-box-shadow);
                transition: transform $speed-slow $easing;
                will-change: transform;
                transform-origin: left;
            }
            &.o-switch-elastic:before {
                transform: scaleX(1.5);
                @include variable('border-radius', 'switch-border-radius', $switch-border-radius);
            }
        }
        &:checked + .o-switch-check {
            @include variable('background', 'switch-active-background-color', $switch-active-background-color);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.o-color-#{$name} {
                    @include variable('background', ('color-' + #{$name}), $color);
                }
            }
            &:before {
                transform: translate3d(100%, 0, 0);
            }
            &.o-switch-elastic:before {
                // Might be a little offset if base font is not 16px
                transform: translate3d(50%, 0, 0) scaleX(1.5);
            }
        }
        &:focus, &:active {
            outline: none;
            + .o-switch-check {
                box-shadow: $switch-active-box-shadow-length rgba($switch-active-box-shadow-color, $switch-active-box-shadow-opacity);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.o-color-#{$name} {
                        box-shadow: $switch-active-box-shadow-length rgba($color, $switch-active-box-shadow-opacity);
                    }
                }
            }
            &:checked + .o-switch-check {
                box-shadow: $switch-checked-box-shadow-length rgba($switch-checked-box-shadow-color, $switch-checked-box-shadow-opacity);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.o-color-#{$name} {
                        box-shadow: $switch-checked-box-shadow-length rgba($color, $switch-checked-box-shadow-opacity);
                    }
                }
            }
        }
    }
    .o-switch-label {
        @include variable('padding', 'switch-label-padding', $switch-label-padding);
    }
    &:hover {
        input[type=checkbox] + .o-switch-check {
            // background: rgba($switch-hover-background-color, $switch-active-background-color-opacity);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.o-color-#{$name} {
                    // background: rgba($color, $switch-active-background-color-opacity);
                    &:before {
                        content: "";
                        width: 100%;
                        height: 100%;
                        position: absolute;
                        left: 0;
                        @include variable('background-color', ('color-' + #{$name}), $color);
                        @include variable('opacity', 'switch-active-background-color-opacity', $switch-active-background-color-opacity);
                    }
                }
            }
            &:before {
                content: "";
                width: 100%;
                height: 100%;
                position: absolute;
                left: 0;
                @include variable('background-color', 'switch-hover-background-color', $switch-hover-background);
                @include variable('opacity', 'switch-active-background-color-opacity', $switch-active-background-color-opacity);
            }
        }
        input[type=checkbox]:checked + .o-switch-check {
            // background: rgba($switch-active-background-color, $switch-active-background-color-opacity);
            @each $name, $pair in $colors {
                $color: nth($pair, 1);
                &.color-#{$name} {
                    // background: rgba($color, $switch-active-background-color-opacity);
                    &:before {
                        content: "";
                        width: 100%;
                        height: 100%;
                        position: absolute;
                        left: 0;
                        @include variable('background-color', ('color-' + #{$name}), $color);
                        @include variable('opacity', 'switch-active-background-color-opacity', $switch-active-background-color-opacity);
                    }
                }
            }
            &:before {
                content: "";
                width: 100%;
                height: 100%;
                position: absolute;
                left: 0;
                @include variable('background-color', 'switch-active-background-color', $switch-active-background-color);
                @include variable('opacity', 'switch-active-background-color-opacity', $switch-active-background-color-opacity);
            }
        }
    }
    &.o-switch-rounded {
        input[type=checkbox] {
            + .o-switch-check {
                @include variable('border-radius', 'switch-rounded-border-radius', $switch-rounded-border-radius);
                &:before {
                    @include variable('border-radius', 'switch-rounded-border-radius', $switch-rounded-border-radius);
                }
            }
            &.o-switch-elastic:before {
                transform: scaleX(1.5);
                @include variable('border-radius', 'switch-rounded-border-radius', $switch-rounded-border-radius);
            }
        }
    }
    &.o-switch-outlined {
        input[type=checkbox] {
            + .o-switch-check {
                background: transparent;
                @include variable('border-width', 'switch-outlined-border-width', $switch-outlined-border-width);
                @include variable('border-style', 'switch-outlined-border-style', $switch-outlined-border-style);
                @include variable('border-color', 'switch-outlined-border-color', $switch-outlined-border-color);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.o-color-#{$name} {
                        border-color: rgba($color, $switch-outlined-border-color-opacity);
                        &:before {
                            @include variable('background', ('color-' + #{$name}), $color);
                        }
                        &:hover {
                            border-color: rgba($color, $switch-outlined-border-color-opacity);
                        }
                    }
                }
                &:before {
                    @include variable('background', 'switch-outlined-background', $switch-outlined-background);
                }
            }
            &:checked + .o-switch-check {
                @include variable('border-color', 'switch-active-background-color', $switch-active-background-color);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.o-color-#{$name} {
                        background: transparent;
                        @include variable('border-color', ('color-' + #{$name}), $color);
                        &:before {
                            @include variable('background', ('color-' + #{$name}), $color);
                        }
                    }
                }
                &:before {
                    @include variable('background', 'switch-active-background-color', $switch-active-background-color);
                }
            }
        }
        &:hover {
            input[type=checkbox] + .o-switch-check {
                background: transparent;
                border-color: rgba($switch-hover-border-color, $switch-hover-border-color-opacity);
            }
            input[type=checkbox]:checked + .o-switch-check {
                background: transparent;
                border-color: rgba($switch-active-background-color, $switch-hover-border-color-opacity);
                @each $name, $pair in $colors {
                    $color: nth($pair, 1);
                    &.is-color-#{$name} {
                        border-color: rgba($color, $switch-hover-border-color-opacity);
                    }
                }
            }
        }
    }
    @each $name, $value in $sizes {
        &.o-size-#{$name} {
            @include variable('font-size', ('font-size-' + #{name}), $value);
        }
    }
    &[disabled] {
        @include variable('opacity', 'switch-disabled-opacity', $switch-disabled-opacity);
    }
}
